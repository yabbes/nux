#!/bin/bash

# convert txt file of links to proper html formatted a hrefs
cat goodies.log | awk '{print "<a href=\"" $0 "\">" $0 "</a><br>"}' > ~/goodies.html

# sum integers of each line with awk
cat Dokumente/store1.txt | awk '{summe+=$5} END {print summe "MB"}'

# find oldest file and delete it
find . -maxdepth 1 -name "*.zip" -type f -printf '%T@ %p\n'  | sort -n | tail -1 | awk '{print $2}' | xargs -I '{}' rm '{}'

# find files older than x but not newer than y and delete them
find /data/attachments/ -type f -newermt '2019-01-24 03:52:00' ! -newermt '2019-01-28 10:37:00' | xargs -I '{}' rm '{}'

# formatted timestamp no hours..
timestamp=$(date -d "today" +"%Y%m%d")

# count certain files in directory
fileCount=$(find $folderDirectory -maxdepth 1 -name "*.zip" -type f -mtime +7 | wc -l)

# sqldump
/usr/local/mysql/bin/mysqldump --opt -u username -ppassword dbname > /home/user/backup$timestamp.sql

# mount samba share in fstab via cifs
//server/sharename	/home/user/mounting/point	cifs	uid=1000,gid=1000,username=sambauser,password=password,iocharset=utf8,sec=ntlm	0 0
# check if it mounts correctly "mount -a" before reboot

# check if a certain process is running and execute code
if pgrep -f "/process/location/script.sh" > /dev/null
then
	echo "process found running"
	exit 0
else
	echo "process not running"
	exit 1
fi

# simple numerical comparison in bash with conditionary statement
# how many files of a certain type are in folder x
COUNT=$(find /home/user/myfolder -type f -name "*.sql" | wc -l)
if [ $COUNT -gt 5 ]; then
	echo "there are more than 5 sql files"
fi

# compare modified date of two files with -ot or -nt (older than / newer than)
# if $file1 older than $file 2, replace with newer
if [ "$file1" -ot "$file2" ]; then
    cp -f "$file2" "$file1"
fi

# list newest file of certain type in directory 
ls -t *.jpa | head -1

# remove line breaks from file via tr
tr '\n' ' ' < input_filename

# use curl to send a dummy POST request
curl --data "param1=value1&param2=value2" https://example.com/resource.cgi

# use curl to check availability of http ressource and check exit code
tschw@tbox:~$ curl -s http://www.osfi-bsif.gc.ca/Eng/Docs/indstld.xlsx -o /dev/null
tschw@tbox:~$ echo $?
0

# replace a certain phrase by nothing with sed (delete it)
# had to use it for a mysqldump
sed -i 's/ROW_FORMAT=FIXED//g' neue.sql

# delete line containing match in output file
cat emails.txt | sed '/mymatch/d' > output.txt

# using braces to simplify handling several conditions in SQL
# This example uses three flexible conditions
SELECT * FROM `table` WHERE cellA = 1 AND ((cellB = '') OR (cellB <= 20171004)) AND ((cellC='') OR (cellC >= 20171004))

# show containing folder sizes by using du -h with --max-depht=n
du -h --max-depth=1
# sort by size (only works properly with same unit for all contents)
du -h --max-depth=1  | sort -nr > du_listing

# using grep to count number of lines with match
grep -c 'match' file.txt
# counting number of lines excluding the blank ones in file
grep -c '[^[:space:]]' file.txt
# multi match grep using -e
STDOUT | grep -e "match 1" -e "match 2"
# grep either A or B
cat /var/log/syslog | grep -E "(eth3|eth4)"

#find name of key event under xorg
The xev program will output the expected keycodes.

# installing a binary with setuid
# example brightlight that modifies files in sysfs
chown root:root brightlight
chmod 4751 brightlight

# compress one large file into multiple chunks of ~150MB each
gzip -c largefile.ova | split -b 150000000 - smallcompressedfiles.gz

# dd remote image with ssh to standardout and write output locally
ssh root@source dd if=/dev/vg/source.img | dd of=/dev/mapper/vg/target.img 

# view postfix mailqueue
mailq
# delete a certain mail address from mailq
postqueue -p | tail -n +2 | awk 'BEGIN { RS = "" } /username@example\.com/ { print $1 }' | tr -d '*!' | postsuper -d -
# and re-try to send the remaining ones
postqueue -f

# using dig to make a dns query using a specified dns server
dig any farm03.sip.qsc.de. @213.148.129.10

# create a self-signed ssl-cert in 3 steps
openssl genrsa -out server.key 2048
openssl req -new -key server.key -out server.csr
openssl x509 -req -days 730 -in server.csr -signkey server.key -out

